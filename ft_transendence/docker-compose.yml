version: '3.3'

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Front-End/Dockerfile
    volumes:
      - ${PWD}/Front-End:/app/Front-End
    ports:
      - 3000:3000
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ${PWD}/backend:/backend
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - db

  db:
    container_name: postgres
    image: postgres:13-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: on-failure

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "8080:80"
    restart: always

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/tools:/etc/nginx/ssl/
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend

volumes:
  pg_data:
